mpi_run = "mpirun --bind-to core --report-bindings -np 12"

analyses = ["MC_VBF_HH"]

param_list = [
    {clambda = 1.0, cV = 1.0, c2V = 1.0},
    {clambda = -1.0, cV = 0.9, c2V = 1.5},
    {clambda = -1.0, cV = 1.05, c2V = 1.3},
    {clambda = 0.0, cV = 1.0, c2V = 1.0},
    {clambda = 1.0, cV = 0.9, c2V = 1.0},
    {clambda = 1.0, cV = 1.0, c2V = 0.5},
    {clambda = 1.0, cV = 1.0, c2V = 1.5},
    {clambda = 2.0, cV = 0.9, c2V = 1.4},
    {clambda = 2.0, cV = 1.0, c2V = 1.0},
    {clambda = 3.0, cV = 1.1, c2V = 0.5},
    {clambda = 4.0, cV = 0.95, c2V = 0.5},
    {clambda = 6.0, cV = 1.1, c2V = 1.0},
]

[parameters]
scale = [0.5, 1.0, 2.0]

[fit]
function_name = "fit_function"
normalize = true
code = """\
import numpy as np
def fit_function(couplings, A0, A1, A2, A3, A4, A5):
    return np.array([np.sum(np.array([A0, A1, A2, A3, A4, A5]) * np.array([clambda**2*cv**2, cv**4, c2v**2, clambda*cv**3, clambda*cv*c2v, cv**2*c2v])) for clambda, cv, c2v in couplings.T])
"""